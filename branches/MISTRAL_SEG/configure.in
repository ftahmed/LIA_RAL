AC_INIT(configure.in)
AM_CONFIG_HEADER(config.h)
AC_CANONICAL_SYSTEM

date_ver=`date '+%Y%m%d'`
AM_INIT_AUTOMAKE(MISTRAL_Seg,${date_ver})

AC_SUBST(date_ver)

AC_ISC_POSIX
AC_PROG_CC
AM_PROG_CC_STDC
AC_PROG_CXX
AC_PROG_RANLIB  
AC_PROG_INSTALL

AC_LIBTOOL_DLOPEN
AM_PROG_LIBTOOL

AC_HEADER_STDC
AC_C_CONST
AC_TYPE_SIZE_T

AC_DEFINE_UNQUOTED(ARCHITECTURE,"${target}",[Nom de l'architecture])
AC_DEFINE_UNQUOTED(PROCESSEUR,"${target_cpu}",[Nom du processeur])
AC_DEFINE_UNQUOTED(__SUN_GCC__,"1",[ne pas integer sunmath])

AC_CHECK_LIB(m,log)

dnl enables ALIZE support
AC_ARG_WITH(
	alize,
	[  --with-alize           defined alize support],
	[
	if test "x$with_alize" != "xno"; then
          AC_DEFINE(ALIZE, 1, "ALIZE package support")
	  alize_lib="-lalize"
	  if test "x$with_alize" != "xyes"; then
	    alize_include="-I$with_alize/include -I$with_alize/src -I$with_alize/include/alize/"
	    alize_lib="-L$with_alize/lib -L$with_alize/src -I$with_alize/include -I$with_alize/src -lalize"
          fi
	fi
	]		
)
AC_SUBST(alize_include)
AC_SUBST(alize_lib)

dnl enables LIATOOLS support
AC_ARG_WITH(
	liatools,
	[  --with-liatools           defined liatools support],
	[
	if test "x$with_liatools" != "xno"; then
          AC_DEFINE(LIATOOLS, 1, "LIATOOLS package support")
	  liatools_lib="-l liatools"
	  if test "x$with_liatools" != "xyes"; then
	    liatools_include="-I$with_liatools/include -I$with_liatools/src -I$with_liatools/include/liatools/"
	    liatools_lib="-L$with_liatools/lib -L$with_liatools -I$with_liatools -I$with_liatools/src -lliatools"
      fi
	fi
	]		
)
AC_SUBST(liatools_include)
AC_SUBST(liatools_lib)


# prefix=`pwd`

AC_MSG_CHECKING(to see if we can add '-O3 -Wall ' to CXXFLAGS)
if test x${GXX} != x ; then
 	AC_MSG_RESULT(yes)
 	CXXFLAGS="-O3 -Wall "
else
 	AC_MSG_RESULT(no)
 	CXXFLAGS=" -I${includedir}"
fi

AC_OUTPUT(Makefile src/Makefile doc/Makefile doc/doxygen.cfg test_ester/Makefile test_ester/gmm_ubm/Makefile)
echo
echo "-----------------------------------"
echo "target : ${target}"
echo "target_cpu : ${target_cpu}"
echo "prefix : ${prefix}"
echo "exec_prefix : ${exec_prefix}"
echo "bindir : ${bindir}"
echo "libdir : ${libdir}"
echo "includedir : ${includedir}"
echo "-----------------------------------"
